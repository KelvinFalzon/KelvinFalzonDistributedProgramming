@page "/notif"
@inject HttpClient Http
@inject ApiAuthenticationStateProvider ApiAuthenticationStateProvider

<PageTitle>Notifications</PageTitle>

<h1>My Notifications</h1>

@if (notifications == null)
{
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>User Id</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var notificaiton in notifications)
            {
                <tr>
                    <td>@notificaiton.Id</td>
                    <td>@notificaiton.UserId</td>
                    <td>@notificaiton.description</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private Notifications[]? notifications;

    protected override async Task OnInitializedAsync()
    {
        var authstate = await ApiAuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authstate.User;

        var userIdClaim = user.FindFirst(c => c.Type == "userId")?.Value;

        if (!string.IsNullOrEmpty(userIdClaim))
        {
            try
            {
                notifications = await Http.GetFromJsonAsync<Notifications[]>($"http://localhost:5003/gateway/Notifications/getnotifications?userId={userIdClaim}");

            }
            catch (Exception ex)
            {
                notifications = null;
            }
        }

    }

    public class Notifications
    {
        public string? Id { get; set; }
        public string? UserId { get; set; }
        public string? description { get; set; }

    }
}
